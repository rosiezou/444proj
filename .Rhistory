lines(months, matrix_res[i,],col = i+100)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Yearly Loess Residuals",type = 'l',col = 10)
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*i)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10)
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*i)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*i)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*(i+5)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*(i+1)
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*(i+5))
}
scatter.smooth(tco2, co2, span = 5/468)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals)
lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitted(loess_with_specific_span_smooth))
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, predict(loess_with_specific_span_smooth))
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitted(loess_with_specific_span_smooth))
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitted(loess_with_specific_span_smooth), type="l")
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitted(loess_with_specific_span_smooth))
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals)
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitted(fitls2))
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$residuals, fitls2$fitted)
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$fitted, type= "l")
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(loess_with_specific_span_smooth, type= "l")
# lines(loess_with_specific_span_smooth)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(loess_with_specific_span_smooth, type= "l")
points(fitls2$residuals, add = TRUE)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(loess_with_specific_span_smooth, type= "l")
points(fitls2$residuals)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(loess_with_specific_span_smooth, type= "l")
points(fitls$residuals)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls$residuals, fitls2$fitted)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$fitted, fitls$residuals)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$fitted, fitls2$residuals)
loess_with_specific_span_smooth <- loess.smooth(tco2, co2, span = 5/468)
fitls2 <- loess(co2~tco2, span = 5/468)
plot(fitls2$fitted, fitls2$residuals, xlab = "fitted values", ylab = "residuals",
main = "Residuals vs. Fitted for span = 5/468")
plot(tco2, fitls2$residuals, xlab = "time", ylab = "residuals",
main = "Residuals vs. Time for span = 5/468")
plot(tco2, fitls2$residuals, xlab = "time", ylab = "residuals",
main = "Residuals vs. Time for span = 5/468")
fitls2 <- loess(fitls$1~tco2, span = 5/468)
fitls2 <- loess(fitls$residuals~tco2, span = 5/468)
plot(fitls$residuals, fitls2$residuals, xlab = "fitted values", ylab = "residuals",
main = "Residuals vs. Fitted for span = 5/468")
fitres <- loess(fitls$residuals~tco2, span = 5/468)
plot(fitres$fitted, fitls$residuals, xlab = "fitted residuals",
ylab = "actual residuals from fitls", main = "Residuals vs. Fitted for span = 5/468")
plot(tco2, fitres$residuals, xlab = "time", ylab = "residuals",
main = "Residuals vs. Time for span = 5/468")
fitls$s
fitls$weights
fitls$x
fitls$robust
vector(fitted(fitls)) %*% vector(co2)
fitted(fitls) %*% t(co2)
clear
Slong <- fitted(fitls) %*% t(co2)
dim(Slong)
Slong[150]
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], Slong[350,])
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
curve(months, matrix_res[i,],col = 10*(i+5))
}
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*(i+5))
}
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], Slong[350,])
abline(v = tco2[150])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,])
abline(v = tco2[150])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,])
abline(v = tco2[150])
points(Slong[350,], add = TRUE, col = "firebrick")
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,])
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tcol2[350], col = "firebrick")
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], xlab = "column index", ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(22,0.17, # places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(400,10500, # places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(10500,400, # places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(400, 105000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(380, 105500,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(380, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$s[100])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$s)
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d[1:100])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d[1:100,])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d)
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d)
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d[1:50])
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(decomp$d[1:100])
print(decomp$d)
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[:100,]))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[:100]))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[1:100]))
decomp$d[1:100]
decomp$d[30] == 0
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[2:100]))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[1:100]))
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[2:100]))
options(warn = -1)
tco2 <- as.vector(time(co2))
co2 <- as.vector(co2)
scatter.smooth(tco2, co2, col = adjustcolor("firebrick", 0.3), pch = 30)
plot(tco2, co2, col=adjustcolor("firebrick",0.25),
xlab = 'tco2', ylab = 'co2', pch = 19)
lines(loess.smooth(tco2, co2))
fitls <- loess(co2~tco2)
plot(tco2[-1], diff(predict(fitls)), type = "l", lwd = 2, col = "firebrick",
xlab = "time", ylab = "lagged differences", main="lagged differences over time")
plot(tco2, fitls$residuals, type = "l", lwd = 2, col = "firebrick",
xlab = "time", ylab = "loess residuals", main="loess residuals over time")
months = seq (1:12)
matrix_res = matrix(fitls$residuals,nrow = length(tco2)/12,ncol = 12)
plot (months,matrix_res[1,],main = "Overlay of Yearly Residuals",type = 'l',col = 10,
xlab = "months", ylab = "residuals")
for (i in 2:39){
lines(months, matrix_res[i,],col = 10*(i+5))
}
fitres <- loess(fitls$residuals~tco2, span = 5/468)
plot(fitres$fitted, fitls$residuals, xlab = "fitted residuals",
ylab = "actual residuals from fitls", main = "Residuals vs. Fitted for span = 5/468")
plot(tco2, fitres$residuals, xlab = "time", ylab = "residuals",
main = "Residuals vs. Time for span = 5/468")
Slong <- fitted(fitls) %*% t(co2)
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[2:100]))
summary(fitls)
fitls$enp
fitls$xnames
fitls$call
fitls$pars
fitls$kd
sum(decomp$d)
decomp$d[1:5]
sum(decomp$d[2:100])
sum(decomp$d[2:468])
Slong <- tcol2 %*% solve(t(tco2)%*%tco2) %*% tco2
Slong <- tco2 %*% solve(t(tco2)%*%tco2) %*% tco2
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[2:100]))
Slong <- tco2 %*% solve(t(tco2)%*%tco2) %*% tco2
plot(Slong[150,], ylab = "matrix values")
abline(v = tco2[150])
points(Slong[350,], col = "firebrick")
abline(v = tco2[350], col = "firebrick")
legend(360, 106000,# places a legend at the appropriate place
c('row 350','row 150'), # puts text in the legend
lty=c(1,1),
lwd=c(2.5,2.5),col=c('firebrick','black'))
decomp <- svd(Slong)
plot(c(decomp$d[1:100]))
rm(list = ls())
data <- Quandl.datatable('SHARADAR/SF')
install.packages("Quandl")
library('Quandl')
data <- Quandl.datatable('SHARADAR/SF')
Quandl.api_key("tYifu5ReVS7x9V5GFzRT")
library('Quandl')
data <- Quandl.datatable('SHARADAR/SF')
library('Quandl')
data <- Quandl.datatable('SHARADAR')
library('Quandl')
data <- Quandl.datatable('SHARADAR-SF1')
library('Quandl')
data <- Quandl.datatable('SHARADAR-SF')
library('Quandl')
data <- Quandl.datatable('SHARADAR-SF1-2')
library('Quandl')
data <- Quandl.datatable('SHARADAR')
library('Quandl')
data <- Quandl.datatable('SHARADAR-SF')
Quandl.datatable()
library('Quandl')
data <- Quandl.datatable('SHARADAR-SF1-2')
data <- read.csv("SHARADAR-SF1-2.csv", header = TRUE)
setwd("~/Documents/school - current/stat444/444proj")
data <- read.csv("SHARADAR-SF1-2.csv", header = TRUE)
View(data)
View(data)
data[7, 7] == NA
data[7, 7] == 'NA'
data[7, 7]
missing(data[7,7])
data[7, 7] == ''
is.na(data[7,7])
data <- na.omit(data)
View(data)
pairs(data)
View(data)
